package com.usx.dao.impl;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Repository;import com.usx.dao.SysUserDao;import com.usx.model.User;import com.usx.util.HibernateUtil;import com.usx.util.StringUtil;@Repositorypublic class SysUserDaoImpl implements SysUserDao {		@Autowired	private HibernateUtil hibernateUtil;		@SuppressWarnings("unchecked")	@Override	public List<Map<String, Object>> getDataList(int page, int pageSize) {		String query = "SELECT u.id, u.loginName, u.password, u.role, u.areaId, u.description, a.areaName  FROM user u, area a "				+ " WHERE u.areaId = a.id limit "				+ (page - 1) * pageSize + ", " + pageSize;		List<Object[]> objects = hibernateUtil.fetchAll(query);		List<Map<String, Object>> resultList = new ArrayList<Map<String, Object>>();		for (Object[] object : objects) {			int id = (Integer) object[0];			String loginName = (String) object[1];			String password = (String) object[2];			int role = (Integer) object[3];			int areaId = (Integer) object[4];			String description = (String) object[5];			String areaName = (String) object[6];						Map<String, Object> map = new HashMap<String, Object>();			map.put("id", id);			map.put("loginName", loginName);			map.put("password", password);			map.put("role", role);			map.put("areaId", areaId);			map.put("description", description);			map.put("areaName", areaName);			resultList.add(map);		}		return resultList;	}	@SuppressWarnings("unchecked")	@Override	public int getDataCount() {		String query = "SELECT count(id) from user";		List<Object> objects = hibernateUtil.fetchAll(query);		Object _count = objects.get(0);		return Integer.parseInt(_count.toString());	}		/**	 * 保存用户	 * @param sysRole	 */	public void saveData(User user) {		hibernateUtil.create(user);	}	public void editData(User user) {		hibernateUtil.update(user);	}	public User getDataById(final int dataId) {		return hibernateUtil.fetchById(dataId, User.class);	}		public void deleteDataById(final int id) {		hibernateUtil.delete(id, User.class);	}		@SuppressWarnings("unchecked")	public User getUserByName(final String loginName) {		String query = "SELECT u.id, u.loginName, u.password, u.role, u.areaId, u.description FROM user u"				+ " WHERE u.loginName = '" + loginName + "'";		List<Object[]> objects = hibernateUtil.fetchAll(query);		User result = null;		for (Object[] object : objects) {			int id = (Integer) object[0];			String _loginName = (String) object[1];			String password = (String) object[2];			int role = (Integer) object[3];			int areaId = (Integer) object[4];			String description = (String) object[5];			result = new User();			result.setId(id);			result.setLoginName(_loginName);			result.setPassword(password);			result.setRole(role);			result.setAreaId(areaId);			result.setDescription(description);			break;		}		return result;	}}