<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.area.server.minhangareaserver.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.area.server.minhangareaserver.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="areaId" jdbcType="INTEGER" property="areaid" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="loginName" jdbcType="VARCHAR" property="loginname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role" jdbcType="INTEGER" property="role" />
  </resultMap>
  <resultMap id="BaseResultMap1" type="com.area.server.minhangareaserver.dto.UserDTO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="areaId" jdbcType="INTEGER" property="areaid" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="loginName" jdbcType="VARCHAR" property="loginname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="areaName" jdbcType="VARCHAR" property="areaname" />
  </resultMap>
  <sql id="Base_Column_List">
    id, areaId, description, loginName, password, role
  </sql>
  <!--根据loginName查找-->
  <select id="getUserByName" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select u.id, u.loginName, u.password, u.role, u.areaId, u.description
    from user u
    where loginName = #{loginName}
  </select>
 <!--删除-->
  <delete id="deleteDataById" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!--根据id查找-->
  <select id="getDataById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <!--保存-->
  <insert id="saveData" parameterType="com.area.server.minhangareaserver.pojo.User">
    insert into user (id, areaId, description,
      loginName, password, role
      )
    values (#{id,jdbcType=INTEGER}, #{areaid,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR},
      #{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}
      )
  </insert>
  <!--编辑-->
  <update id="editData" parameterType="com.area.server.minhangareaserver.pojo.User">
    update user
    set areaId = #{areaid,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      loginName = #{loginname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--获得系统用户数据分页-->
  <select id="getDataList" resultMap="BaseResultMap1">
--    SELECT u.id, u.loginName, u.password, u.role, u.areaId, u.description, a.areaName
--     FROM user u, area a
--     WHERE u.areaId = a.id limit (#{page}-1)*#{pageSize},#{pageSize}

    SELECT u.id, u.loginName, u.password, u.role, u.areaId, u.description, a.areaName
    FROM user u, area a  WHERE u.areaId = a.id limit 1,3

   <!--SELECT u.id, u.loginName, u.password, u.role, u.areaId, u.description, a.areaName
       FROM user u, area a  WHERE u.areaId = a.id limit  (page - 1) * pageSize , pageSize;
   -->
  </select>

  <!--获得系统用户数量-->
  <select id="getDataCount"  parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select count(id) from user;
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.area.server.minhangareaserver.pojo.User">
    insert into user (id, areaId, description, 
      loginName, password, role
      )
    values (#{id,jdbcType=INTEGER}, #{areaid,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.area.server.minhangareaserver.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="areaid != null">
        areaId,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="loginname != null">
        loginName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="areaid != null">
        #{areaid,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null">
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.area.server.minhangareaserver.pojo.User">
    update user
    <set>
      <if test="areaid != null">
        areaId = #{areaid,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null">
        loginName = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>