package com.usx.control;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import com.usx.model.Area;import com.usx.service.SysAreaService;import com.usx.util.StringUtil;@Controller  @RequestMapping("/sys/area")public class SysAreaControl {		@Autowired	private SysAreaService sysAreaService;		@RequestMapping(value = "/list", method = RequestMethod.GET)      public String list(Model model) {		return "sysArea";    }		/**	 * 获得区域列表的数据	 * 	 * @param page	 * @param model	 * @return	 */	@RequestMapping(value = "/getList.do", method = RequestMethod.GET)  	@ResponseBody    public Map<String, Object> getList(String page, Model model) {		Map<String, Object> result = new HashMap<String, Object>();		int _page = Integer.parseInt(page);		List<Area> roleList = sysAreaService.getDataList(_page, 10);		result.put("data", roleList);		result.put("currentPage", page);		result.put("pages", sysAreaService.getDataCount());		return result;    }	/**	 * 跳转到添加页面	 * @param model	 * @return	 */	@RequestMapping(value = "/addView", method = RequestMethod.GET)      public String addView(Model model) {		return "sysAreaAdd";    }		/**	 * 保存	 * @return	 */	@RequestMapping(value = "/addSave.do", method = RequestMethod.POST)  	@ResponseBody	public Map<String , Object> addSave(HttpServletRequest req, HttpServletResponse rep) {		Map<String, Object> result = new HashMap<String, Object>();		String id = req.getParameter("id");		String code = req.getParameter("code");		String areaName = req.getParameter("areaName");		Area area = new Area();		area.setCode(code);		area.setAreaName(areaName);		// 保存		if (StringUtil.isEmpty(id)) {			sysAreaService.saveData(area);		}		// 编辑		else {			area.setId(Integer.parseInt(id));			sysAreaService.editData(area);		}		result.put("code", 0);		result.put("msg", "添加成功！");		return result;	}		/**	 * 编辑页面	 * @param dataId	 * @param model	 * @return	 */	@RequestMapping(value = "/editView/{dataId}", method = RequestMethod.GET)      public String editView(@PathVariable int dataId, Model model) {		Area area = sysAreaService.getDataById(dataId);		model.addAttribute("area", area);		return "sysAreaAdd";	}		/**	 * 删除	 * @param req	 * @param rep	 * @return	 */	@RequestMapping(value = "/delete.do", method = RequestMethod.POST)  	@ResponseBody	public Map<String , Object> delete(HttpServletRequest req, HttpServletResponse rep) {		Map<String, Object> result = new HashMap<String, Object>();		String id = req.getParameter("id");		if (StringUtil.isEmpty(id) == false) {			// 2、删除			sysAreaService.deleteDataById(Integer.parseInt(id));		}		result.put("code", 0);		result.put("msg", "删除成功！");		return result;	}}