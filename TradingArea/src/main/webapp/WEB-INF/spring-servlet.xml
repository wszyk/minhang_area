<?xml version="1.0" encoding="UTF-8"?><!--suppress ALL --><beans xmlns="http://www.springframework.org/schema/beans"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">	<!-- Spring MVC扫描Control -->	<context:component-scan base-package="com.usx" />	<!-- 数据连接配置 -->	<context:property-placeholder location="classpath:application.properties" />	<mvc:annotation-driven />	<!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->	<!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->	<mvc:resources location="/*.html" mapping="/**.html" />	<mvc:resources location="/css/" mapping="/css/**" />	<mvc:resources location="/js/" mapping="/js/**" />	<mvc:resources location="/images/" mapping="/images/**"/>	<mvc:resources location="/font/" mapping="/font/**" />	<mvc:resources location="/layui/" mapping="/layui/**" />	<mvc:resources location="/thirdjs/" mapping="/thirdjs/**" />	<!--配置拦截器, 多个拦截器,顺序执行 -->	<mvc:interceptors>		<mvc:interceptor>			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->			<mvc:mapping path="/sys/**" />			<mvc:mapping path="/app/**" />			<bean class="com.usx.util.CommonInterceptor"></bean>		</mvc:interceptor>		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->	</mvc:interceptors>	<!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->	<bean		class="org.springframework.web.servlet.view.InternalResourceViewResolver">		<property name="prefix" value="/views/" />		<property name="suffix" value=".jsp" />	</bean>	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> 		<property name="messageConverters"> <list> <ref bean="mappingJacksonHttpMessageConverter" 		/> </list> </property> </bean> -->	<bean id="mappingJacksonHttpMessageConverter"		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">		<property name="supportedMediaTypes">			<list>				<value>text/html;charset=UTF-8</value>			</list>		</property>	</bean>	<!-- c3p0数据源 -->	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"		destroy-method="close">		<property name="driverClass" value="${database.driverClass}" />		<property name="jdbcUrl" value="${database.url}" />		<property name="user" value="${database.username}" />		<property name="password" value="${database.password}" />		<property name="acquireIncrement" value="${connection.acquireIncrement}" />		<property name="minPoolSize" value="${connection.minPoolSize}" />		<property name="maxPoolSize" value="${connection.maxPoolSize}" />		<property name="maxIdleTime" value="${connection.maxIdleTime}" />	</bean>	<!-- Hibernate SessionFactory -->	<bean id="sessionFactory"		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">		<property name="dataSource" ref="dataSource"></property>		<property name="hibernateProperties">			<props>				<prop key="hibernate.dialect">${hibernate.dialect}</prop>				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>			</props>		</property>		<property name="packagesToScan" value="com.usx.model"></property>	</bean>	<!-- 事务管理 -->	<bean id="transactionManager"		class="org.springframework.orm.hibernate4.HibernateTransactionManager">		<property name="sessionFactory" ref="sessionFactory" />	</bean>	<tx:annotation-driven transaction-manager="transactionManager" />	<bean id="multipartResolver"		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">		<property name="maxUploadSize" value="9000000" />	</bean></beans>